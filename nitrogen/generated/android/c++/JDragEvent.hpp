///
/// JDragEvent.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "DragEvent.hpp"

#include "DragEventType.hpp"
#include "JDragEventType.hpp"
#include "JPoint.hpp"
#include "Point.hpp"

namespace margelo::nitro::nitroreadium {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "DragEvent" and the the Kotlin data class "DragEvent".
   */
  struct JDragEvent final: public jni::JavaClass<JDragEvent> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/nitroreadium/DragEvent;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct DragEvent by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    DragEvent toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldType = clazz->getField<JDragEventType>("type");
      jni::local_ref<JDragEventType> type = this->getFieldValue(fieldType);
      static const auto fieldStart = clazz->getField<JPoint>("start");
      jni::local_ref<JPoint> start = this->getFieldValue(fieldStart);
      static const auto fieldEnd = clazz->getField<JPoint>("end");
      jni::local_ref<JPoint> end = this->getFieldValue(fieldEnd);
      return DragEvent(
        type->toCpp(),
        start->toCpp(),
        end->toCpp()
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JDragEvent::javaobject> fromCpp(const DragEvent& value) {
      return newInstance(
        JDragEventType::fromCpp(value.type),
        JPoint::fromCpp(value.start),
        JPoint::fromCpp(value.end)
      );
    }
  };

} // namespace margelo::nitro::nitroreadium
