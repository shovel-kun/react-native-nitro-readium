///
/// JLocator.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "Locator.hpp"

#include "JLocations.hpp"
#include "JTextObject.hpp"
#include "Locations.hpp"
#include "TextObject.hpp"
#include <optional>
#include <string>
#include <vector>

namespace margelo::nitro::nitroreadium {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "Locator" and the the Kotlin data class "Locator".
   */
  struct JLocator final: public jni::JavaClass<JLocator> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/nitroreadium/Locator;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct Locator by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    Locator toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldHref = clazz->getField<jni::JString>("href");
      jni::local_ref<jni::JString> href = this->getFieldValue(fieldHref);
      static const auto fieldType = clazz->getField<jni::JString>("type");
      jni::local_ref<jni::JString> type = this->getFieldValue(fieldType);
      static const auto fieldTitle = clazz->getField<jni::JString>("title");
      jni::local_ref<jni::JString> title = this->getFieldValue(fieldTitle);
      static const auto fieldLocations = clazz->getField<JLocations>("locations");
      jni::local_ref<JLocations> locations = this->getFieldValue(fieldLocations);
      static const auto fieldText = clazz->getField<JTextObject>("text");
      jni::local_ref<JTextObject> text = this->getFieldValue(fieldText);
      return Locator(
        href->toStdString(),
        type->toStdString(),
        title != nullptr ? std::make_optional(title->toStdString()) : std::nullopt,
        locations != nullptr ? std::make_optional(locations->toCpp()) : std::nullopt,
        text != nullptr ? std::make_optional(text->toCpp()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JLocator::javaobject> fromCpp(const Locator& value) {
      return newInstance(
        jni::make_jstring(value.href),
        jni::make_jstring(value.type),
        value.title.has_value() ? jni::make_jstring(value.title.value()) : nullptr,
        value.locations.has_value() ? JLocations::fromCpp(value.locations.value()) : nullptr,
        value.text.has_value() ? JTextObject::fromCpp(value.text.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::nitroreadium
