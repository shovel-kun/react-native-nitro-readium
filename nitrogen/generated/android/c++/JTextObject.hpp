///
/// JTextObject.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "TextObject.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::nitroreadium {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "TextObject" and the the Kotlin data class "TextObject".
   */
  struct JTextObject final: public jni::JavaClass<JTextObject> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/nitroreadium/TextObject;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct TextObject by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    TextObject toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldAfter = clazz->getField<jni::JString>("after");
      jni::local_ref<jni::JString> after = this->getFieldValue(fieldAfter);
      static const auto fieldBefore = clazz->getField<jni::JString>("before");
      jni::local_ref<jni::JString> before = this->getFieldValue(fieldBefore);
      static const auto fieldHighlight = clazz->getField<jni::JString>("highlight");
      jni::local_ref<jni::JString> highlight = this->getFieldValue(fieldHighlight);
      return TextObject(
        after != nullptr ? std::make_optional(after->toStdString()) : std::nullopt,
        before != nullptr ? std::make_optional(before->toStdString()) : std::nullopt,
        highlight != nullptr ? std::make_optional(highlight->toStdString()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JTextObject::javaobject> fromCpp(const TextObject& value) {
      return newInstance(
        value.after.has_value() ? jni::make_jstring(value.after.value()) : nullptr,
        value.before.has_value() ? jni::make_jstring(value.before.value()) : nullptr,
        value.highlight.has_value() ? jni::make_jstring(value.highlight.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::nitroreadium
